{"version":3,"sources":["components/with-spinner/with-spinner.component.jsx","components/campaigns/campaigns.component.jsx","utils/common-utils.js","components/campaigns/campaigns.container.jsx","components/search-box/search-box.component.jsx","components/form-input/form-input.component.jsx","redux/action.types.js","redux/user.action.js","App.js","redux/campaign.action.js","serviceWorker.js","redux/user.reducer.js","campaigns.data.js","redux/campaign.utils.js","redux/campaign.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["WithSpinner","WrappedComponent","isCampaignLoading","otherProps","className","Campaigns","campaigns","userMap","style","marginTop","map","campaign","key","id","name","userId","startDate","endDate","moment","Date","isBetween","currency","Budget","Math","abs","sign","toFixed","CampaignsContainer","compose","connect","state","users","SearchBox","props","type","placeholder","onChange","onSearchChange","FormInput","handleChange","label","isvalid","value","length","ActionTypes","FETCH_USERS_START","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","FILTER_CAMPAIGNS","ADD_CAMPAIGN","FILTER_CAMPAIGNS_BY_DATE","ADD_CAMPAIGN_ERROR","fetchUsersStartAsync","dispatch","fetch","then","response","json","usersMap","reduce","obj","user","Object","assign","username","payload","fetchUsersSuccess","error","errorMessage","message","App","filters","event","target","dateInput","isBefore","setState","endDateValid","filterCampaigns","searchField","searchText","startDateValid","window","AddCampaigns","isAfter","addCampaignError","addCampaign","format","this","console","log","filteredCampaigns","Component","Boolean","location","hostname","match","INITIAL_STATE","userReducer","action","CAMPAIGNS_DATA","filterCampaign","filteredResults","keys","forEach","filter","toLowerCase","includes","date","isValid","campaignReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e712ca82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './with-spinner.styles.scss';\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n  const Spinner = ({ isCampaignLoading, ...otherProps }) => {\r\n    return isCampaignLoading ? (\r\n      <div className=\"SpinnerOverlay\">\r\n        <div className=\"SpinnerContainer\"></div>\r\n      </div>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { currencyFormatter } from '../../utils/common-utils';\r\n\r\nimport './campaigns.style.scss';\r\n\r\nconst Campaigns = ({campaigns, userMap}) => {\r\n    return (\r\n        userMap && \r\n        <div className=\"container-fluid\" style={{marginTop: 10}}>\r\n            <div className=\"table-row header\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"table-col\">Name</div>\r\n                    <div className=\"table-col\">User Name</div>\r\n                    <div className=\"table-col\">Start Date</div>\r\n                    <div className=\"table-col\">End Date</div>\r\n                    <div className=\"table-col\">Active</div>\r\n                    <div className=\"table-col\">Budget</div>\r\n                </div>              \r\n            </div>\r\n\r\n            {campaigns.map((campaign)=>(\r\n                <div key={campaign.id} className=\"table-row\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"table-col\">{campaign.name}</div>\r\n                        <div className=\"table-col\">{userMap[campaign.userId]? userMap[campaign.userId]: 'Unknown user' }</div>\r\n                        <div className=\"table-col\">{campaign.startDate}</div>\r\n                        <div className=\"table-col\">{campaign.endDate}</div>\r\n                        <div className=\"table-col\">\r\n                            { moment(new Date()).isBetween(campaign.startDate, campaign.endDate) ?\r\n                                <span className=\"active\">Active</span>\r\n                                :\r\n                                <span className=\"inactive\">InActive</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"table-col\">{currencyFormatter(campaign.Budget)}</div>\r\n                    </div>              \r\n                </div>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Campaigns;","\r\nexport const currencyFormatter = (currency) => {\r\n    if (Math.abs(currency) > 999999) {\r\n        return Math.sign(currency)*((Math.abs(currency)/1000000).toFixed(1)) + 'M USD';\r\n    }\r\n    return Math.abs(currency) > 999 ? Math.sign(currency)*((Math.abs(currency)/1000).toFixed(1)) + 'k USD' : Math.sign(currency)*Math.abs(currency) + ' USD';\r\n}","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport Campaigns from './campaigns.component';\r\n\r\nconst mapStateToProps = state => ({\r\n    isCampaignLoading: state.users.isCampaignLoading\r\n})\r\n\r\nconst CampaignsContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(Campaigns);\r\n\r\nexport default CampaignsContainer;","import React from 'react';\r\n\r\nimport './search-box.style.scss';\r\n\r\nconst SearchBox = props => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='Search by name'\r\n    onChange={props.onSearchChange}\r\n  />\r\n);\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, isvalid, ...otherProps }) => (\r\n  <div className='group'>\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? 'shrink' : ''\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n    <input  className={`form-input ${isvalid === 'true' ? '' : 'has-error'}`} onChange={handleChange} {...otherProps} />\r\n  </div>\r\n);\r\n\r\nexport default FormInput;","const ActionTypes = {\r\n    FETCH_USERS_START: 'FETCH_USERS_START',\r\n    FETCH_USERS_SUCCESS: 'FETCH_USERS_SUCCESS',\r\n    FETCH_USERS_FAILURE: 'FETCH_USERS_FAILURE',\r\n    FILTER_CAMPAIGNS: 'FILTER_CAMPAIGNS',\r\n    ADD_CAMPAIGN: 'ADD_CAMPAIGN',\r\n    FILTER_CAMPAIGNS_BY_DATE: 'FILTER_CAMPAINGS_BY_DATE',\r\n    ADD_CAMPAIGN_ERROR: 'ADD_CAMPAIGN_ERROR'\r\n};\r\n\r\nexport default ActionTypes;","import ActionTypes from './action.types';\r\n\r\nexport const fetchUsersStart = () => ({\r\n    type: ActionTypes.FETCH_USERS_START\r\n});\r\n\r\nexport const fetchUsersSuccess = (usersMap) => ({\r\n    type: ActionTypes.FETCH_USERS_SUCCESS,\r\n    payload: usersMap\r\n});\r\n\r\nexport const fetchUsersFailure = (errorMessage) => ({\r\n    type: ActionTypes.FETCH_USERS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchUsersStartAsync = () => {\r\n    return dispatch => {\r\n        \r\n        dispatch(fetchUsersStart());\r\n        try {\r\n            fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                const usersMap = users.reduce((obj, user) => Object.assign(obj, { [user.id]: user.username }), {})\r\n                dispatch(fetchUsersSuccess(usersMap));\r\n            }); \r\n        } catch (error) {\r\n            dispatch(fetchUsersFailure(error.message))\r\n        }\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport './App.scss';\n\n\n\nimport {default as Campaigns} from './components/campaigns/campaigns.container';\nimport SearchBox from './components/search-box/search-box.component';\nimport FormInput from './components/form-input/form-input.component';\n\nimport { fetchUsersStartAsync } from './redux/user.action';\nimport { filterCampaigns, addCampaign, addCampaignError } from './redux/campaign.action';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchField: '',\n      endDateValid: 'true',\n      startDateValid: 'true',\n      dateInput:{ startDate:'', endDate:'' }\n    };\n  };\n  \n  filters = {};\n\n  componentWillMount() {\n    window.AddCampaigns = (id, name, startDate, endDate, Budget, userId) => {\n      if(moment(startDate).isAfter(moment(endDate))) {\n        this.props.addCampaignError();\n      }\n      else {\n        this.props.addCampaign({\n          id,\n          name,\n          startDate: moment(startDate).format('MM/DD/YYYY'),\n          endDate: moment(endDate).format('MM/DD/YYYY'),\n          Budget,\n          userId\n        });\n      }\n      \n    };\n  }\n\n  componentDidMount() {\n    const { fetchUsersStartAsync } = this.props;\n    fetchUsersStartAsync();\n  }\n\n  handleChange = event => {\n    const { value, name } = event.target;\n   \n      if(this.state.dateInput.startDate !== '' && moment(value).isBefore(moment(this.state.dateInput.startDate))) { \n        this.setState({ endDateValid: 'false' });\n      }\n      else {\n        this.setState({ endDateValid: 'true' });\n        this.setState({dateInput:{...this.state.dateInput, [name]: value }});\n        this.filters[name] = value;\n        this.props.filterCampaigns(this.filters);\n      }\n    \n  };\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n    const { filterCampaigns } = this.props;\n    this.filters.searchText = event.target.value;\n    filterCampaigns(this.filters);\n  };\n\n  render() {\n    console.log('app.js props: ', this.props);\n    const { campaigns, users } = this.props; \n    \n    \n    const { startDate, endDate } = this.state.dateInput;\n    const { endDateValid, startDateValid } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2> Filter Campaigns </h2>\n          <FormInput\n              name='startDate'\n              type='date'\n              handleChange={this.handleChange}\n              value={startDate}\n              label='Start Date'\n              placeholder='Start Date'\n              isvalid={startDateValid}\n            />\n          <FormInput\n              name='endDate'\n              type='date'\n              handleChange={this.handleChange}\n              value={endDate}\n              label='End Date'\n              placeholder='End Date'\n              isvalid={endDateValid}\n            />\n          <SearchBox onSearchChange={this.onSearchChange} />\n        </div>\n          {\n            campaigns.error ? <span>{campaigns.error}</span> : <Campaigns campaigns={campaigns.filteredCampaigns} userMap={users.users}/>\n          }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  campaigns: state.campaigns,\n  users: state.users\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchUsersStartAsync: () => dispatch(fetchUsersStartAsync()),\n  filterCampaigns: (filters) => dispatch(filterCampaigns(filters)),\n  addCampaign: (campaign) => dispatch(addCampaign(campaign)),\n  addCampaignError: () => dispatch(addCampaignError())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import ActionTypes from './action.types';\r\n\r\nexport const filterCampaigns = (filters) => ({\r\n    type: ActionTypes.FILTER_CAMPAIGNS,\r\n    payload: filters\r\n});\r\n\r\nexport const addCampaign = (campaign) => ({\r\n    type: ActionTypes.ADD_CAMPAIGN,\r\n    payload: campaign\r\n});\r\n\r\nexport const addCampaignError = () => ({\r\n    type: ActionTypes.ADD_CAMPAIGN_ERROR,\r\n    payload: 'Dates are invalid !!'\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionTypes from './action.types';\r\n\r\nconst INITIAL_STATE = {\r\n    users: null,\r\n    error: null,\r\n    isCampaignLoading: true\r\n};\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.FETCH_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                isCampaignLoading: false,\r\n                error: null\r\n            }\r\n        case ActionTypes.FETCH_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                users: null,\r\n                isCampaignLoading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","export const CAMPAIGNS_DATA = [{\r\n    \"id\": 1,\r\n    \"name\": \"Divavu\",\r\n    \"startDate\": \"9/19/2019\",\r\n    \"endDate\": \"3/9/2020\",\r\n    \"Budget\": 88377,\r\n    \"userId \": 3\r\n}, {\r\n    \"id\": 2,\r\n    \"name\": \"Jaxspan\",\r\n    \"startDate\": \"11/21/2019\",\r\n    \"endDate\": \"2/21/2020\",\r\n    \"Budget\": 608715,\r\n    \"userId\": 6\r\n},\r\n{\r\n    \"id\": 3,\r\n    \"name\": \"Miboo\",\r\n    \"startDate\": \"11/1/2019\",\r\n    \"endDate\": \"6/20/2019\",\r\n    \"Budget\": 239507,\r\n    \"userId \": 7\r\n}, {\r\n    \"id\": 4,\r\n    \"name\": \"Trilith\",\r\n    \"startDate\": \"8/25/2019\",\r\n    \"endDate\": \"11/30/2019\",\r\n    \"Budget\": 179838,\r\n    \"userId\": 1\r\n},\r\n{\r\n    \"id\": 5,\r\n    \"name\": \"Layo\",\r\n    \"startDate\": \"11/28/2019\",\r\n    \"endDate\": \"3/10/2020\",\r\n    \"Budget\": 837850,\r\n    \"userId \": 9\r\n}, {\r\n    \"id\": 6,\r\n    \"name\": \"Photojam\",\r\n    \"startDate\": \"7/25/2019\",\r\n    \"endDate\": \"6/23/2019\",\r\n    \"Budget\": 858131,\r\n    \"userId\": 3\r\n},\r\n{\r\n    \"id\": 7,\r\n    \"name\": \"Blogtag\",\r\n    \"startDate\": \"6/27/2019\",\r\n    \"endDate\": \"1/15/2020\",\r\n    \"Budget\": 109078,\r\n    \"userId \": 2\r\n}, {\r\n    \"id\": 8,\r\n    \"name\": \"Rhyzio\",\r\n    \"startDate\": \"10/13/2019\",\r\n    \"endDate\": \"1/25/2020\",\r\n    \"Budget\": 272552,\r\n    \"userId \": 4\r\n}, {\r\n    \"id\": 9,\r\n    \"name\": \"Zoomcast\",\r\n    \"startDate\": \"9/6/2019\",\r\n    \"endDate\": \"11/10/2019\",\r\n    \"Budget\": 1000,\r\n    \"userId\": 8\r\n},\r\n{\r\n    \"id\": 10,\r\n    \"name\": \"Realbridge\",\r\n    \"startDate\": \"3/5/2020\",\r\n    \"endDate\": \"10/2/2019\",\r\n    \"Budget\": 5056022,\r\n    \"userId\": 5\r\n}\r\n];","import moment from 'moment';\r\n\r\nexport const filterCampaign = (filters, campaigns) => {\r\n    let filteredResults = campaigns;\r\n    Object.keys(filters).forEach(function(key) {\r\n        console.log(key, filters[key]);\r\n        if(key === 'searchText') {\r\n            filteredResults = filteredResults.filter(campaign => \r\n                campaign.name.toLowerCase().includes(filters[key].toLowerCase()) \r\n            );\r\n        }\r\n        else if(key === 'startDate') {\r\n            const date = moment(filters[key]);\r\n            if(date.isValid()) {\r\n                filteredResults = filteredResults.filter(campaign => \r\n                moment(campaign.startDate).isAfter(date) \r\n                );\r\n            }\r\n            \r\n        }\r\n        else if(key === 'endDate') {\r\n            const date = moment(filters[key]);\r\n            if(date.isValid()) {\r\n                filteredResults = filteredResults.filter(campaign => \r\n                moment(campaign.endDate).isBefore(date) \r\n                );\r\n            }\r\n        }\r\n    });\r\n    return filteredResults;\r\n} \r\n\r\nexport const addCampaign = (campaign, campaigns) => {\r\n    return [...campaigns, campaign];\r\n}\r\n","import ActionTypes from './action.types';\r\nimport { CAMPAIGNS_DATA } from '../campaigns.data';\r\nimport { filterCampaign, addCampaign } from './campaign.utils';\r\n\r\nconst INITIAL_STATE = {\r\n    campaigns: CAMPAIGNS_DATA,\r\n    filteredCampaigns: CAMPAIGNS_DATA,\r\n    error: null\r\n};\r\nconst campaignReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.FILTER_CAMPAIGNS:\r\n            return {\r\n                ...state,\r\n                filteredCampaigns: filterCampaign(action.payload, state.campaigns),\r\n                error: null\r\n            }\r\n        case ActionTypes.ADD_CAMPAIGN:\r\n            return {\r\n                ...state,\r\n                campaigns: addCampaign(action.payload, state.campaigns),\r\n                filteredCampaigns: addCampaign(action.payload, state.campaigns),\r\n                error: null\r\n            }\r\n        case ActionTypes.ADD_CAMPAIGN_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default campaignReducer;","import { combineReducers } from 'redux';\r\n\r\nimport userReducer from './user.reducer';\r\nimport campaignReducer from './campaign.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n    campaigns: campaignReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif(process.env.NODE_ENV === 'development' ) {\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}